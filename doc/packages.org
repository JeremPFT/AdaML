* Packages
** Minimal view
The simplest package representation is\newline

*** code                                                    :BMCOL:B_block:
:PROPERTIES:
:BEAMER_col: 0.65
:END:
_=AdaML=_
#+begin_example
!include AdaML.puml
package("Deep_Thought")
#+end_example

*** figure                                                  :BMCOL:B_block:
:PROPERTIES:
:BEAMER_col: 0.35
:END:
_=UML=_
#+begin_src plantuml :file fig-02-detail-view.eps
!include AdaML.puml
package("Deep_Thought")
#+end_src

#+RESULTS[9e5758013375e35a0f52d80450f7884201531f36]:
[[file:fig-02-detail-view.eps]]

** Code View
Shows package elements\newline

*** code                                                    :BMCOL:B_block:
:PROPERTIES:
:BEAMER_col: 0.6
:END:
_=AdaML=_
#+begin_example
!include AdaML.puml
begin_package("Deep_Thought")
  function("Answer_The_Question", "", "Natural")
private()
  variable("The_Answer", "Natural", 42)
end()
#+end_example

*** figure                                                  :BMCOL:B_block:
:PROPERTIES:
:BEAMER_col: 0.35
:END:
_=UML=_
#+begin_src plantuml :file fig-02-code-view.eps
!include AdaML.puml
begin_package("Deep_Thought")
  function("Answer_The_Question", "", "Natural")
private()
  variable("The_Answer", "Natural", 42)
end()
#+end_src

#+RESULTS[1bee01e4589d4a85c718fe8d27f958168f8e5b6c]:
[[file:fig-02-code-view.eps]]

*** Ada
#+begin_src ada :exports code
package Deep_Thought is
  function Answer_The_Question return Natural;
private
  The_Answer : Natural := 42;
end FooBar;
#+end_src

** More Details - Types & Specifiers
*** code                                                    :BMCOL:B_block:
:PROPERTIES:
:BEAMER_col: 0.6
:END:
_=AdaML=_
#+begin_example
!include AdaML.puml
  generic_with("N : Natural range 1 .. 42")
  type("Range_N", "range 1 .. N")
private()
  variable("The_Answer", "Range_N")
public()
  procedure("Bar", "in out Range_N")
end()
#+end_example

*** figure                                                  :BMCOL:B_block:
:PROPERTIES:
:BEAMER_col: 0.4
:END:
_=UML=_
#+begin_src plantuml :file fig-02-more-details.eps
!include AdaML.puml
begin_package("Deep_Thought<N>")
  generic_with("N : Natural range 1 .. 42")
  type("Range_N", "range 1 .. N")
private()
  variable("The_Answer", "Range_N")
public()
  procedure("Bar", "in out Range_N")
end()
#+end_src

#+RESULTS[1f2eabbbd77050b8369aee525a52eeefeef00e6d]:
[[file:fig-02-more-details.eps]]

*** Warning
When using /entity specifiers/, like =generic=, types, variables and methods
must be manually sorted (contrast with previous slide)

** Component view
Component view lets you see other entities contained in the package\newline

*** code                                                    :BMCOL:B_block:
:PROPERTIES:
:BEAMER_col: 0.5
:END:
_=AdaML=_
#+begin_example
!include AdaML.puml
begin_package_spec("Hello_World")
  package("Foo_Bar")
  type("Bar_Type")
  type("Baz_Type")
  depends("Baz_Type", "Bar_Type")
  depends("Foo_Bar", "Bar_Type")
end()
#+end_example

*** figure                                                    :BMCOL:B_block:
:PROPERTIES:
:BEAMER_col: 0.5
:END:
_=UML=_
#+begin_src plantuml :file fig-02-specification-view.eps
!include AdaML.puml
begin_package_spec("Hello_World")
  package("Foo_Bar")
  type("Bar_Type")
  type("Baz_Type")
  depends("Baz_Type", "Bar_Type")
  depends("Foo_Bar", "Bar_Type")
end()
#+end_src

#+RESULTS[34422c456c5d8327b17464a9dafaba1ccf95e528]:
[[file:fig-02-specification-view.eps]]

** Config                                                         :noexport:
Local Variables:
org-confirm-babel-evaluate: nil
End:
